{"version":3,"sources":["components/Header/Header.js","lib/DataLoader.js","lib/KeyLoader.js","lib/Utils.js","components/SpellComponent/Spell/Spell.js","components/SpellComponent/SpellList/SpellList.js","components/SpellComponent/SpellForm/SpellForm.js","components/SpellComponent/SpellContainer/SpellContainer.js","components/ItemComponent/ItemContainer/ItemContainer.js","App.js","serviceWorker.js","index.js"],"names":["Header","state","spells","items","activePage","bind","code","active","this","setState","props","displayContainer","className","onClick","React","Component","SpellData","Spells","SpellKey","nameCompare","x","y","name","levelCompare","level","SortByLevel","spellList","cantripList","filter","spell","CANTRIP","levelList","sort","concat","SortByName","Spell","formatClass","formatDescription","formatLevel","classes","classList","i","toUpperCase","slice","toLowerCase","length","description","split","map","text","key","id","type","casting_time","range","components","display","duration","descTags","levelFormat","displaySpell","raw","SpellList","spellDivs","sortSpell","LEVEL","SPELL","SpellForm","updateForm","submitForm","e","target","value","filterSpell","preventDefault","onSubmit","placeholder","onChange","SpellContainer","fullSpellList","form","includes","prevState","method","reverse","SortMethod","ItemContainer","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a640b3c0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nclass Header extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      spells: true,\r\n      items: false\r\n    };\r\n    this.activePage = this.activePage.bind(this);\r\n  }\r\n\r\n  activePage(code) {\r\n    let active = {\r\n      spells: code === 'SPELLS',\r\n      items: code === 'ITEMS'\r\n    }\r\n    this.setState(active);\r\n    this.props.displayContainer(active);\r\n  }\r\n\r\n  render() {\r\n    return (    \r\n      <header className=\"header-container\">\r\n        <h1>DnD Compendium</h1>\r\n        <nav className=\"header-nav\">\r\n          <ul>\r\n            <li\r\n              onClick={ () => this.activePage('SPELLS') }\r\n              className={ this.state.spells ? 'active' : '' }\r\n            >SPELLS</li>\r\n            <li\r\n              onClick={ () => this.activePage('ITEMS') }\r\n              className={ this.state.items ? 'active' : '' }\r\n            >ITEMS</li>\r\n          </ul>\r\n        </nav>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import Spells from '../data/spells.json';\r\n\r\nexport function SpellData() {\r\n  return Spells;\r\n}\r\n","export const SpellKey = {\r\n  \"SPELL\": \"SPELL\",\r\n  \"LEVEL\": \"LEVEL\",\r\n  \"CANTRIP\": \"cantrip\"\r\n};\r\n","import { SpellKey } from './KeyLoader';\r\n\r\nfunction nameCompare(x, y) {\r\n  if (x.name < y.name) {\r\n    return -1;\r\n  } else if (x.name > y.name) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n};\r\n\r\nfunction levelCompare(x, y) {\r\n  if (x.level < y.level) {\r\n    return -1;\r\n  } else if (x.level > y.level) {\r\n    return 1;\r\n  } else {\r\n    return nameCompare(x, y);\r\n  }\r\n};\r\n\r\nexport function SortByLevel(spellList) {\r\n  let cantripList = spellList.filter((spell) => {\r\n    return spell.level === SpellKey.CANTRIP;\r\n  });\r\n  let levelList = spellList.filter((spell) => {\r\n    return spell.level !== SpellKey.CANTRIP;\r\n  });\r\n  return cantripList.sort(nameCompare).concat(levelList.sort(levelCompare));\r\n}\r\n\r\nexport function SortByName(spellList) {\r\n  return spellList.sort(nameCompare);\r\n}\r\n","import React from 'react';\r\nimport './Spell.css';\r\nimport { SpellKey } from '../../../lib/KeyLoader';\r\n\r\nclass Spell extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.formatClass = this.formatClass.bind(this);\r\n    this.formatDescription = this.formatDescription.bind(this);\r\n    this.formatLevel = this.formatLevel.bind(this);\r\n  }\r\n\r\n  formatClass(classes) {\r\n    let classList = '';\r\n    for (let i in classes) {\r\n      classList += classes[i][0].toUpperCase() + classes[i].slice(1).toLowerCase();\r\n      if (i < classes.length - 1) {\r\n        classList += ', ';\r\n      }\r\n    }\r\n    return classList;\r\n  }\r\n\r\n  formatDescription(description) {\r\n    let descArr = description.split('\\n');\r\n    let descTags = descArr.map((text, i) => {\r\n      if (i === 0) {\r\n        return <p key={ i }><span className=\"descriptor\">Description:</span> { text }<br/></p>;\r\n      }\r\n      return <p key={ i }>{ text }<br/></p>;\r\n    })\r\n    return descTags;\r\n  }\r\n\r\n  formatLevel(level) {\r\n    if (level === SpellKey.CANTRIP) {\r\n      return level[0].toUpperCase() + level.slice(1);\r\n    }\r\n    return level;\r\n  }\r\n\r\n  render() {\r\n    let { id, name, type, casting_time, range, components, display,\r\n      duration, classes, description, level } = this.props.spell;\r\n    \r\n    let classList = this.formatClass(classes);\r\n    let descTags = this.formatDescription(description);\r\n    let levelFormat = this.formatLevel(level);\r\n    return (\r\n      <div className=\"spell-container\">\r\n        <div className=\"spell-header\" onClick={ () => this.props.displaySpell(id) }>\r\n          <ul>\r\n            <li className=\"spell-header-level\">{ levelFormat }</li>\r\n            <li className=\"spell-header-name\">{ name }</li>\r\n            <li className=\"toggle\">{ display ? '-' : '+' }</li>\r\n          </ul>\r\n        </div>\r\n        <div className={ display ? 'spell-desc' : 'hidden' } >\r\n          <h1 className=\"main\">{ name }</h1>\r\n          <p className=\"type\">{ type }</p>\r\n          <p><span className=\"descriptor\">Casting Time:</span> { casting_time }</p>\r\n          <p><span className=\"descriptor\">Range:</span> { range }</p>\r\n          <p><span className=\"descriptor\">Components:</span> { components.raw }</p>\r\n          <p><span className=\"descriptor\">Duration:</span> { duration }</p>\r\n          <p><span className=\"descriptor\">Classes:</span> { classList }</p>\r\n          <br />\r\n          { descTags }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Spell;\r\n","import React from 'react';\r\nimport './SpellList.css';\r\nimport { SpellKey } from '../../../lib/KeyLoader';\r\nimport Spell from '../Spell/Spell';\r\n\r\nclass SpellList extends React.Component {\r\n\r\n  render() {\r\n    let spellDivs = this.props.spellList.map((spell) => {\r\n      return (\r\n        <Spell \r\n          key={ spell.id }\r\n          spell={ spell }\r\n          displaySpell={ this.props.displaySpell } \r\n        />\r\n      );\r\n    });\r\n    return (\r\n      <div>\r\n        <div className=\"spell-list-header\">\r\n          <ul>\r\n            <li onClick={ () => this.props.sortSpell(SpellKey.LEVEL) } >LEVEL</li>\r\n            <li onClick={ () => this.props.sortSpell(SpellKey.SPELL) } >SPELL</li>\r\n          </ul>\r\n        </div>\r\n        { spellDivs }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SpellList;\r\n","import React from 'react';\r\nimport './SpellForm.css';\r\n\r\nclass SpellForm extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: ''\r\n    }\r\n    this.updateForm = this.updateForm.bind(this);\r\n    this.submitForm = this.submitForm.bind(this);\r\n  }\r\n\r\n  updateForm(e) {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n    this.props.filterSpell({name: value});\r\n  }\r\n\r\n  submitForm(e) {\r\n    e.preventDefault();\r\n    this.props.filterSpell(this.state);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"spell-form\" >\r\n        <form onSubmit={ this.submitForm }>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={ this.state.name }\r\n            placeholder=\"SPELL\"\r\n            onChange={ this.updateForm }\r\n          />\r\n          <br />\r\n          <div>\r\n            {/* <p>ADVANCED FILTER</p>\r\n            <button>APPLY</button> */}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SpellForm;\r\n","import React from 'react';\r\nimport { SpellData } from '../../../lib/DataLoader';\r\nimport { SpellKey } from '../../../lib/KeyLoader';\r\nimport { SortByLevel, SortByName } from '../../../lib/Utils';\r\nimport SpellList from '../SpellList/SpellList';\r\nimport SpellForm from '../SpellForm/SpellForm';\r\n\r\nclass SpellContainer extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      fullSpellList: SortByName(SpellData()),\r\n      spellList: SortByName(SpellData()),\r\n      sort: {\r\n        spell: true,\r\n        level: false\r\n      }\r\n    };\r\n    this.displaySpell = this.displaySpell.bind(this);\r\n    this.filterSpell = this.filterSpell.bind(this);\r\n    this.sortSpell = this.sortSpell.bind(this);\r\n  }\r\n\r\n  filterSpell(form) {\r\n    this.setState(() => {\r\n      let filteredSpellList = this.state.fullSpellList.filter((spell) => {\r\n        let spellName = spell.name.toLowerCase();\r\n        return spellName.includes(form.name.toLowerCase());\r\n      })\r\n      return {\r\n        spellList: filteredSpellList\r\n      };\r\n    })\r\n  }\r\n\r\n  displaySpell(id) {\r\n    this.setState((prevState) => {\r\n      let displayedSpellList = prevState.spellList.map((spell) => {\r\n        if (id === spell.id) {\r\n          spell.display = !spell.display\r\n        }\r\n        return spell;\r\n      });\r\n      return {\r\n        spellList: displayedSpellList\r\n      }\r\n    });\r\n  }\r\n\r\n  sortSpell(method) {\r\n    this.setState((prevState) => {\r\n      if ((prevState.sort.spell && method === SpellKey.SPELL) ||\r\n      (prevState.sort.level && method === SpellKey.LEVEL)) {\r\n        let fullSpellList = [...prevState.fullSpellList];\r\n        let spellList = [...prevState.spellList];\r\n        return {\r\n          fullSpellList: fullSpellList.reverse(),\r\n          spellList: spellList.reverse(),\r\n          sort: {\r\n            spell: method === SpellKey.SPELL,\r\n            level: method === SpellKey.LEVEL\r\n          }\r\n        };\r\n      } else if (method === SpellKey.SPELL || method === SpellKey.LEVEL) {\r\n        let SortMethod = method === SpellKey.SPELL ? SortByName : SortByLevel;\r\n        return {\r\n          fullSpellList: SortMethod(prevState.fullSpellList),\r\n          spellList: SortMethod(prevState.spellList),\r\n          sort: {\r\n            spell: method === SpellKey.SPELL,\r\n            level: method === SpellKey.LEVEL\r\n          }\r\n        };\r\n      }\r\n      return {};\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"spell-master-container\">\r\n        <SpellForm filterSpell={ this.filterSpell } />\r\n        <SpellList\r\n          spellList={ this.state.spellList }\r\n          displaySpell={ this.displaySpell }\r\n          sortSpell={ this.sortSpell }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SpellContainer;\r\n","import React from 'react';\r\n\r\nclass ItemContainer extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Items</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ItemContainer;\r\n","import React from 'react';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport SpellContainer from './components/SpellComponent/SpellContainer/SpellContainer';\nimport ItemContainer from './components/ItemComponent/ItemContainer/ItemContainer';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      spells: true,\n      items: false\n    };\n    this.displayContainer = this.displayContainer.bind(this);\n  }\n\n  displayContainer(state) {\n    this.setState(state);\n  }\n\n  render() {\n    return (\n      <div>\n        <Header displayContainer={ this.displayContainer } />\n        <div className=\"module-container\" >\n          <div className={ this.state.spells ? '' : 'disabled-container' }>\n            <SpellContainer />\n          </div>\n          <div className={ this.state.items ? '' : 'disabled-container' }>\n            <ItemContainer />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}