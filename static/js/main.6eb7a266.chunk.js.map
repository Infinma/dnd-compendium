{"version":3,"sources":["components/Header/Header.js","lib/DataLoader.js","lib/KeyLoader.js","lib/Utils.js","components/SpellComponent/Spell/Spell.js","components/SpellComponent/SpellList/SpellList.js","components/SpellComponent/SpellForm/SpellFormAdvanced/SpellFormAdvanced.js","components/SpellComponent/SpellForm/SpellForm.js","components/SpellComponent/SpellContainer/SpellContainer.js","components/ItemComponent/ItemContainer/ItemContainer.js","App.js","serviceWorker.js","index.js"],"names":["Header","state","spells","items","activePage","bind","code","active","this","setState","props","displayContainer","className","onClick","React","Component","SpellData","Spells","SpellKey","SPELL","LEVEL","CANTRIP","CLASS","SCHOOL","SpellLevels","SpellSchools","SpellClasses","nameCompare","x","y","name","levelCompare","level","SortByLevel","spellList","cantripList","filter","spell","levelList","sort","concat","SortByName","FilterHelper","arr","category","comparison","element","toLowerCase","includes","Spell","formatDescription","desc","descArr","split","text","map","i","key","id","casting_time","range","components","material","display","concentration","duration","classes","school","ritual","higher_level","origin","type","durationCon","materialComp","description","displaySpell","SpellList","spellDivs","sortSpell","SpellFormAdvanced","Cantrip","Abjuration","Conjuration","Divination","Enchantment","Evocation","Illusion","Necromancy","Transmutation","Bard","Cleric","Druid","Paladin","Ranger","Sorcerer","Warlock","Wizard","createCheckboxArray","updateCheckbox","submitFilter","info","onChange","checked","e","target","prevState","newState","obj","value","ObjectContains","preventDefault","submitForm","checkboxLevel","checkboxSchool","checkboxClass","onSubmit","class","SpellForm","advancedFilter","updateForm","showAdvancedFilter","resetFilter","searchSpell","filterSpell","resetSpell","placeholder","SpellContainer","fullSpellList","filteredSpellList","form","activeLevel","activeSchool","activeClass","criteria","validClass","classArr","method","reverse","SortMethod","ItemContainer","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6eb7a266.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nclass Header extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      spells: true,\r\n      items: false\r\n    };\r\n    this.activePage = this.activePage.bind(this);\r\n  }\r\n\r\n  activePage(code) {\r\n    let active = {\r\n      spells: code === 'SPELLS',\r\n      items: code === 'ITEMS'\r\n    }\r\n    this.setState(active);\r\n    this.props.displayContainer(active);\r\n  }\r\n\r\n  render() {\r\n    return (    \r\n      <header className=\"header-container\">\r\n        <h1>DnD Compendium</h1>\r\n        <nav className=\"header-nav\">\r\n          <ul>\r\n            <li\r\n              onClick={ () => this.activePage('SPELLS') }\r\n              className={ this.state.spells ? 'active' : '' }\r\n            >SPELLS</li>\r\n            <li\r\n              onClick={ () => this.activePage('ITEMS') }\r\n              className={ this.state.items ? 'active' : '' }\r\n            >ITEMS</li>\r\n          </ul>\r\n        </nav>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import Spells from '../data/spells.json';\r\n\r\nexport function SpellData() {\r\n  return Spells;\r\n}\r\n","export const SpellKey = {\r\n  SPELL: 'spell',\r\n  LEVEL: 'level',\r\n  CANTRIP: 'Cantrip',\r\n  CLASS: 'class',\r\n  SCHOOL: 'school'\r\n};\r\nexport const SpellLevels = [\r\n  SpellKey.CANTRIP,\r\n  '1st-level',\r\n  '2nd-level',\r\n  '3rd-level',\r\n  '4th-level',\r\n  '5th-level',\r\n  '6th-level',\r\n  '7th-level',\r\n  '8th-level',\r\n  '9th-level'\r\n];\r\nexport const SpellSchools = [\r\n  'Abjuration',\r\n  'Conjuration',\r\n  'Divination',\r\n  'Enchantment',\r\n  'Evocation',\r\n  'Illusion',\r\n  'Necromancy',\r\n  'Transmutation'\r\n];\r\nexport const SpellClasses = [\r\n  'Bard',\r\n  'Cleric',\r\n  'Druid',\r\n  'Paladin',\r\n  'Ranger',\r\n  'Sorcerer',\r\n  'Warlock',\r\n  'Wizard'\r\n];\r\n","import { SpellKey } from './KeyLoader';\r\n\r\nfunction nameCompare(x, y) {\r\n  if (x.name < y.name) {\r\n    return -1;\r\n  } else if (x.name > y.name) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n};\r\n\r\nfunction levelCompare(x, y) {\r\n  if (x.level < y.level) {\r\n    return -1;\r\n  } else if (x.level > y.level) {\r\n    return 1;\r\n  } else {\r\n    return nameCompare(x, y);\r\n  }\r\n};\r\n\r\nexport function SortByLevel(spellList) {\r\n  let cantripList = spellList.filter((spell) => {\r\n    return spell.level === SpellKey.CANTRIP;\r\n  });\r\n  let levelList = spellList.filter((spell) => {\r\n    return spell.level !== SpellKey.CANTRIP;\r\n  });\r\n  return cantripList.sort(nameCompare).concat(levelList.sort(levelCompare));\r\n}\r\n\r\nexport function SortByName(spellList) {\r\n  return spellList.sort(nameCompare);\r\n}\r\n\r\nexport function FilterHelper(arr, category, comparison) {\r\n  let filteredList = arr.filter((element) => {\r\n    let el = element[category].toLowerCase();\r\n    return el.includes(comparison.toLowerCase());\r\n  })\r\n  return filteredList;\r\n}\r\n\r\nexport function ObjectContains(obj, value) {\r\n  for (let key in obj) {\r\n    if (obj[key] === value) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n","import React from 'react';\r\nimport './Spell.css';\r\n\r\nclass Spell extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.formatDescription = this.formatDescription.bind(this);\r\n  }\r\n\r\n  formatDescription(desc) {\r\n    let descArr = desc.split('\\n');\r\n    descArr = descArr.filter((text) => {\r\n      if (text !== '') {\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n    let descTags = descArr.map((text, i) => {\r\n      if (i === 0) {\r\n        return <p key={ i }><span className=\"descriptor\">Description:</span> { text }</p>;\r\n      }\r\n      return <p key={ i }><br/>{ text }</p>;\r\n    })\r\n    return descTags;\r\n  }\r\n\r\n  render() {\r\n    let { id, name, casting_time, range, components, material, display, concentration,\r\n      duration, classes, desc, level, school, ritual, higher_level, origin } = this.props.spell;\r\n    \r\n    let type = ritual ? `${level} ${school} (Ritual)` : `${level} ${school}`;\r\n    let durationCon = concentration ? `Concentration, ${duration}` : duration;\r\n    let materialComp = typeof material !== 'undefined' ? `${components} (${material})` : components;\r\n    let description = this.formatDescription(desc);\r\n\r\n    return (\r\n      <div className=\"spell-container\">\r\n        <div className=\"spell-header\" onClick={ () => this.props.displaySpell(id) }>\r\n          <ul>\r\n            <li className=\"spell-header-level\">{ level }</li>\r\n            <li className=\"spell-header-name\">{ name }</li>\r\n            <li className=\"toggle\">{ display ? '-' : '+' }</li>\r\n          </ul>\r\n        </div>\r\n        <div className={ display ? 'spell-desc' : 'hidden' } >\r\n          <h1 className=\"main\">{ name }</h1>\r\n          <p className=\"type\">{ type }</p>\r\n          <p><span className=\"descriptor\">Casting Time:</span> { casting_time }</p>\r\n          <p><span className=\"descriptor\">Range:</span> { range }</p>\r\n          <p><span className=\"descriptor\">Components:</span> { materialComp }</p>\r\n          <p><span className=\"descriptor\">Duration:</span> { durationCon }</p>\r\n          <p><span className=\"descriptor\">Classes:</span> { classes }</p>\r\n          <br />\r\n          { description }\r\n          { typeof higher_level !== 'undefined' ? \r\n            <p><br/><span className=\"descriptor\">At Higher Levels:</span> { higher_level }</p> :\r\n            null\r\n          }\r\n          <p><br/><span className=\"descriptor\">Source:</span> { origin }</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Spell;\r\n","import React from 'react';\r\nimport './SpellList.css';\r\nimport { SpellKey } from '../../../lib/KeyLoader';\r\nimport Spell from '../Spell/Spell';\r\n\r\nclass SpellList extends React.Component {\r\n\r\n  render() {\r\n    let spellDivs = this.props.spellList.map((spell) => {\r\n      return (\r\n        <Spell \r\n          key={ spell.id }\r\n          spell={ spell }\r\n          displaySpell={ this.props.displaySpell } \r\n        />\r\n      );\r\n    });\r\n    return (\r\n      <div>\r\n        <div className=\"spell-list-header\">\r\n          <ul>\r\n            <li onClick={ () => this.props.sortSpell(SpellKey.LEVEL) } >LEVEL</li>\r\n            <li onClick={ () => this.props.sortSpell(SpellKey.SPELL) } >SPELL</li>\r\n          </ul>\r\n        </div>\r\n        { spellDivs }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SpellList;\r\n","import React from 'react';\r\nimport './SpellFormAdvanced.css';\r\nimport { SpellKey, SpellLevels, SpellSchools, SpellClasses } from '../../../../lib/KeyLoader';\r\nimport { ObjectContains } from '../../../../lib/Utils';\r\n\r\nclass SpellFormAdvanced extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      active: {\r\n        [SpellKey.LEVEL]: false,\r\n        [SpellKey.SCHOOL]: false,\r\n        [SpellKey.CLASS]: false\r\n      },\r\n      [SpellKey.LEVEL]: {\r\n        Cantrip: false,\r\n        '1st-level': false,\r\n        '2nd-level': false,\r\n        '3rd-level': false,\r\n        '4th-level': false,\r\n        '5th-level': false,\r\n        '6th-level': false,\r\n        '7th-level': false,\r\n        '8th-level': false,\r\n        '9th-level': false\r\n      },\r\n      [SpellKey.SCHOOL]: {\r\n        Abjuration: false,\r\n        Conjuration: false,\r\n        Divination: false,\r\n        Enchantment: false,\r\n        Evocation: false,\r\n        Illusion: false,\r\n        Necromancy: false,\r\n        Transmutation: false\r\n      },\r\n      [SpellKey.CLASS]: {\r\n        Bard: false,\r\n        Cleric: false,\r\n        Druid: false,\r\n        Paladin: false,\r\n        Ranger: false,\r\n        Sorcerer: false,\r\n        Warlock: false,\r\n        Wizard: false\r\n      }\r\n    };\r\n    this.createCheckboxArray = this.createCheckboxArray.bind(this);\r\n    this.updateCheckbox = this.updateCheckbox.bind(this);\r\n    this.submitFilter = this.submitFilter.bind(this);\r\n  }\r\n\r\n  createCheckboxArray(arr, type) {\r\n    let checkboxList = arr.map((info, i) => {\r\n      return (\r\n        <label key={i}>\r\n          <input\r\n            type=\"checkbox\"\r\n            name={info}\r\n            onChange={ this.updateCheckbox }\r\n            checked={ this.state[type][info] }\r\n          />\r\n          {` ${info}`}\r\n        </label>\r\n      );\r\n    });\r\n    return checkboxList;\r\n  }\r\n\r\n  updateCheckbox(e) {\r\n    const { name, checked } = e.target;\r\n    let type;\r\n    if (SpellClasses.includes(name)) { \r\n      type = SpellKey.CLASS; \r\n    } else if (SpellLevels.includes(name)) {\r\n      type = SpellKey.LEVEL;\r\n    } else {\r\n      type = SpellKey.SCHOOL;\r\n    }\r\n    this.setState((prevState) => {\r\n      let newState = { ...prevState[type] };\r\n      newState[name] = checked;\r\n      if (!checked) {\r\n        if (ObjectContains(newState, true)) {\r\n          return {\r\n            [type]: newState\r\n          };\r\n        }\r\n      }\r\n      let active = { ...prevState.active }\r\n      active[type] = checked;\r\n      return {\r\n        [type]: newState,\r\n        active: active\r\n      };\r\n    })\r\n  }\r\n\r\n  submitFilter(e) {\r\n    e.preventDefault();\r\n    this.props.submitForm(this.state);\r\n  }\r\n\r\n  render() {\r\n    let checkboxLevel = this.createCheckboxArray(SpellLevels, SpellKey.LEVEL);\r\n    let checkboxSchool = this.createCheckboxArray(SpellSchools, SpellKey.SCHOOL);\r\n    let checkboxClass = this.createCheckboxArray(SpellClasses, SpellKey.CLASS);\r\n    return (\r\n      <form className=\"adv-filter\" onSubmit={ this.submitFilter }>\r\n        <ul>\r\n          <li className={ this.state.active.level ? 'active' : '' } >\r\n            <p>LEVEL</p>\r\n            { checkboxLevel }\r\n          </li>\r\n          <li className={ this.state.active.school ? 'active' : '' } >\r\n            <p>SCHOOL</p>\r\n            { checkboxSchool }\r\n          </li>\r\n          <li className={ this.state.active.class ? 'active' : '' } >\r\n            <p>CLASS</p>\r\n            { checkboxClass }\r\n          </li>\r\n        </ul>\r\n        <button>APPLY</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SpellFormAdvanced;\r\n","import React from 'react';\r\nimport './SpellForm.css';\r\nimport SpellFormAdvanced from './SpellFormAdvanced/SpellFormAdvanced';\r\n\r\nclass SpellForm extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: '',\r\n      advancedFilter: false\r\n    }\r\n    this.updateForm = this.updateForm.bind(this);\r\n    this.submitForm = this.submitForm.bind(this);\r\n    this.showAdvancedFilter = this.showAdvancedFilter.bind(this);\r\n    this.resetFilter = this.resetFilter.bind(this);\r\n  }\r\n\r\n  updateForm(e) {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n    this.props.searchSpell({name: value});\r\n  }\r\n\r\n  submitForm(filter) {\r\n    this.props.filterSpell(filter);\r\n  }\r\n\r\n  showAdvancedFilter() {\r\n    this.setState((prevState) => {\r\n      return {\r\n        advancedFilter: !prevState.advancedFilter\r\n      };\r\n    });\r\n  }\r\n\r\n  resetFilter() {\r\n    this.props.resetSpell();\r\n    this.showAdvancedFilter();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"spell-form\" >\r\n        <form>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={ this.state.name }\r\n            placeholder=\"SPELL\"\r\n            onChange={ this.updateForm }\r\n          />\r\n          <br />\r\n        </form>\r\n        <p \r\n          className=\"spell-show-filter\" \r\n          onClick={ this.state.advancedFilter ? this.resetFilter : this.showAdvancedFilter }\r\n        >\r\n          {this.state.advancedFilter ? 'DISABLE ' : '' }ADVANCED FILTER\r\n        </p>\r\n        <div className={ this.state.advancedFilter ? \r\n          'spell-adv-filter' : 'disable-filter' } >\r\n            <SpellFormAdvanced submitForm={ this.submitForm } />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SpellForm;\r\n","import React from 'react';\r\nimport { SpellData } from '../../../lib/DataLoader';\r\nimport { SpellKey } from '../../../lib/KeyLoader';\r\nimport { SortByLevel, SortByName, FilterHelper } from '../../../lib/Utils';\r\nimport SpellList from '../SpellList/SpellList';\r\nimport SpellForm from '../SpellForm/SpellForm';\r\n\r\nclass SpellContainer extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      fullSpellList: SortByName(SpellData()),\r\n      filteredSpellList: SortByName(SpellData()),\r\n      spellList: SortByName(SpellData()),\r\n      sort: {\r\n        spell: true,\r\n        level: false\r\n      },\r\n      name: ''\r\n    };\r\n    this.displaySpell = this.displaySpell.bind(this);\r\n    this.filterSpell = this.filterSpell.bind(this);\r\n    this.searchSpell = this.searchSpell.bind(this);\r\n    this.sortSpell = this.sortSpell.bind(this);\r\n    this.resetSpell = this.resetSpell.bind(this);\r\n  }\r\n\r\n  filterSpell(form) {\r\n    let activeLevel = form.active.level;\r\n    let activeSchool = form.active.school;\r\n    let activeClass = form.active.class;\r\n    this.setState(() => {\r\n      let filteredSpellList = this.state.fullSpellList.filter((spell) => {\r\n        let criteria = true;\r\n        if (activeLevel) {\r\n          criteria = criteria && form[SpellKey.LEVEL][spell.level];\r\n        }\r\n        if (activeSchool) {\r\n          criteria = criteria && form[SpellKey.SCHOOL][spell.school];\r\n        }\r\n        if (activeClass) {\r\n          let validClass = false;\r\n          let classArr = spell.classes.split(', ');\r\n          for (let i in classArr) {\r\n            if (form[SpellKey.CLASS][classArr[i]]) {\r\n              validClass = true;\r\n              break;\r\n            }\r\n          }\r\n          criteria = criteria && validClass;\r\n        }\r\n        return criteria;\r\n      });\r\n      return {\r\n        filteredSpellList:  filteredSpellList,\r\n        spellList: FilterHelper(filteredSpellList, 'name', this.state.name),\r\n      };\r\n    });\r\n  }\r\n\r\n  displaySpell(id) {\r\n    this.setState((prevState) => {\r\n      let displayedSpellList = prevState.spellList.map((spell) => {\r\n        if (id === spell.id) {\r\n          spell.display = !spell.display\r\n        }\r\n        return spell;\r\n      });\r\n      return {\r\n        spellList: displayedSpellList\r\n      }\r\n    });\r\n  }\r\n\r\n  searchSpell(form) {\r\n    this.setState(() => {\r\n      return {\r\n        spellList: FilterHelper(this.state.filteredSpellList, 'name', form.name),\r\n        name: form.name\r\n      };\r\n    });\r\n  }\r\n\r\n  sortSpell(method) {\r\n    this.setState((prevState) => {\r\n      if ((prevState.sort.spell && method === SpellKey.SPELL) ||\r\n      (prevState.sort.level && method === SpellKey.LEVEL)) {\r\n        let fullSpellList = [...prevState.fullSpellList];\r\n        let filteredSpellList = [...prevState.filteredSpellList];\r\n        let spellList = [...prevState.spellList];\r\n        return {\r\n          fullSpellList: fullSpellList.reverse(),\r\n          filteredSpellList: filteredSpellList.reverse(),\r\n          spellList: spellList.reverse(),\r\n          sort: {\r\n            spell: method === SpellKey.SPELL,\r\n            level: method === SpellKey.LEVEL\r\n          }\r\n        };\r\n      } else if (method === SpellKey.SPELL || method === SpellKey.LEVEL) {\r\n        let SortMethod = method === SpellKey.SPELL ? SortByName : SortByLevel;\r\n        return {\r\n          fullSpellList: SortMethod(prevState.fullSpellList),\r\n          filteredSpellList: SortMethod(prevState.filteredSpellList),\r\n          spellList: SortMethod(prevState.spellList),\r\n          sort: {\r\n            spell: method === SpellKey.SPELL,\r\n            level: method === SpellKey.LEVEL\r\n          }\r\n        };\r\n      }\r\n      return {};\r\n    });\r\n  }\r\n\r\n  resetSpell() {\r\n    this.setState((prevState) => {\r\n      return {\r\n        filteredSpellList: prevState.fullSpellList,\r\n        spellList: FilterHelper(prevState.fullSpellList, 'name', this.state.name),\r\n      };\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"spell-master-container\">\r\n        <SpellForm \r\n          filterSpell={ this.filterSpell }\r\n          searchSpell={ this.searchSpell }\r\n          resetSpell={ this.resetSpell }\r\n        />\r\n        <SpellList\r\n          spellList={ this.state.spellList }\r\n          displaySpell={ this.displaySpell }\r\n          sortSpell={ this.sortSpell }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SpellContainer;\r\n","import React from 'react';\r\n\r\nclass ItemContainer extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Items</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ItemContainer;\r\n","import React from 'react';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport SpellContainer from './components/SpellComponent/SpellContainer/SpellContainer';\nimport ItemContainer from './components/ItemComponent/ItemContainer/ItemContainer';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      spells: true,\n      items: false\n    };\n    this.displayContainer = this.displayContainer.bind(this);\n  }\n\n  displayContainer(state) {\n    this.setState(state);\n  }\n\n  render() {\n    return (\n      <div>\n        <Header displayContainer={ this.displayContainer } />\n        <div className=\"module-container\" >\n          <div className={ this.state.spells ? '' : 'disabled-container' }>\n            <SpellContainer />\n          </div>\n          <div className={ this.state.items ? '' : 'disabled-container' }>\n            <ItemContainer />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}